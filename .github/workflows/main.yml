# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: ${{ github.repository }}

          # The branch, tag or SHA to checkout. When checking out the repository that
          # triggered a workflow, this defaults to the reference or SHA for that event.
          # Otherwise, uses the default branch.
          ref: 'main'

          # Personal access token (PAT) used to fetch the repository. The PAT is configured
          # with the local git config, which enables your scripts to run authenticated git
          # commands. The post-job step removes the PAT.
          #
          # We recommend using a service account with the least permissions necessary. Also
          # when generating a new PAT, select the least scopes necessary.
          #
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          #
          # Default: ${{ github.token }}
          token: ${{ github.token }}

          # SSH key used to fetch the repository. The SSH key is configured with the local
          # git config, which enables your scripts to run authenticated git commands. The
          # post-job step removes the SSH key.
          #
          # We recommend using a service account with the least permissions necessary.
          #
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          # TODO: Create another account without admin permissions and add their SSH key
          ssh-key: ${{secrets.SSH_FETCH}}

          # Known hosts in addition to the user and global host key database. The public SSH
          # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
          # `ssh-keyscan github.com`. The public key for github.com is always implicitly
          # added.
          # ssh-known-hosts: ''

          # Whether to perform strict host key checking. When true, adds the options
          # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
          # the input `ssh-known-hosts` to configure additional hosts.
          # Default: true
          # ssh-strict: ''

          # Whether to configure the token or SSH key with the local git config
          # Default: true
          # persist-credentials: ''

          # Relative path under $GITHUB_WORKSPACE to place the repository
          # path: ''

          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
          # Default: true
          # clean: ''

          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          # fetch-depth: ''

          # Whether to download Git-LFS files
          # Default: false
          lfs: 'true'

          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          #
          # When the `ssh-key` input is not provided, SSH URLs beginning with
          # `git@github.com:` are converted to HTTPS.
          #
          # Default: false
          # submodules: ''
      - name: Unity - Request Activation File
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
        
      - name: Unity - Activate
        uses: game-ci/unity-activate@v1.3
        
      - name: Unity - Test runner
        uses: game-ci/unity-test-runner@v2.0-alpha-6
        
      - name: Unity - Builder
        uses: game-ci/unity-builder@v2.0-alpha-13




